#!/bin/sh
SCRIPTNAME=system_setup
PATH=/usr/local/bin:/usr/bin:/bin:/sbin

. /etc/init.d/init_utilities

mount_if_not_mounted() {
	if [ $# -lt 3 -o $# -gt 4 ]; then
		echo "ERROR: Invalid number of variables passed to mount function"
		exit 1
	fi

	DEST_PATH="$1"
	SRC_PATH="$2"
	TYPE="$3"
	if [ $# -eq 4 ]; then
		OPTIONS="$4"
	else
		OPTIONS=""
	fi

	mount | grep -q "on $DEST_PATH "
	if [ $? -eq 1 ]; then
		mount -t $TYPE $OPTIONS $SRC_PATH $DEST_PATH
	else
		echo "INFO: $DEST_PATH was already mounted; skipping"
	fi
}

start_function() {
	# Setup the normal psuedo-filesystems
	# Mount checking cannot be done if /proc is not mount, and because /proc
	#   cannot be unmounted on a running system we will always try to mount.
	#   This may cause an annoying message on re-mounts of /proc, but there is
	#   no simple way to address it in this init script.
	mkdir -p proc tmp sys var dev
	mount -a
	mount_if_not_mounted "/dev" "tmpfs" "tmpfs" "-o size=2m"
	make_dev null null 1 3
	[ ! -d /dev/pts ] && mkdir -p -m a+rwx /dev/pts
	mount_if_not_mounted "/dev/pts" "devpts" "devpts"

	mkdir -p -m a+rwx /var/log /var/run /var/lock
	touch /var/log/lastlog
	if [ ! -e /var/log/messages ]; then
		ln -s /tmp/messages /var/log/messages
	fi

	# Create a mount point in /tmp
	mkdir -p /tmp/mnt

	# Start klogd and syslogd
	killall -SIGTERM syslogd klogd
	/sbin/klogd
	/sbin/syslogd -S -s 14

	# Setup the RTC
	make_dev rtc rtc 10 135
}

stop_function() {
	rm -f /dev/rtc
	killall syslogd
	killall klogd
	umount /var
	umount /tmp
	umount /sys
	umount /dev/pts
	umount -l /dev
}

case $1 in
	"start")
		start_function
	;;
	"stop")
		stop_function
	;;
	"restart")
		stop_function
		start_function
	;;
	*)
		echo "Usage: $0 {start|stop|restart}"
esac

