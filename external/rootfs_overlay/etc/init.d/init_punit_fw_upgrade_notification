#!/bin/sh
#//*****************************************************************************
#// This file is provided under a dual BSD/LGPLv2.1 license.  When using 
#// or redistributing this file, you may do so under either license.
#//
#// LGPL LICENSE SUMMARY
#//
#// Copyright(c) 2010-2014. Intel Corporation. All rights reserved.
#//
#// This program is free software; you can redistribute it and/or modify 
#// it under the terms of version 2.1 of the GNU Lesser General Public 
#// License as published by the Free Software Foundation.
#//
#// This library is distributed in the hope that it will be useful, but 
#// WITHOUT ANY WARRANTY; without even the implied warranty of 
#// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU 
#// Lesser General Public License for more details.
#//
#// You should have received a copy of the GNU Lesser General Public 
#// License along with this library; if not, write to the Free Software 
#// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 
#// USA. The full GNU Lesser General Public License is included in this 
#// distribution in the file called LICENSE.LGPL.
#//
#// Contact Information:
#//     Intel Corporation
#//     2200 Mission College Blvd.
#//     Santa Clara, CA  97052
#//
#// BSD LICENSE
#//
#// Copyright (c) 2010-2013. Intel Corporation. All rights reserved.
#//
#// Redistribution and use in source and binary forms, with or without 
#// modification, are permitted provided that the following conditions 
#// are met:
#//
#//   - Redistributions of source code must retain the above copyright 
#//     notice, this list of conditions and the following disclaimer.
#//   - Redistributions in binary form must reproduce the above copyright 
#//     notice, this list of conditions and the following disclaimer in 
#//     the documentation and/or other materials provided with the 
#//     distribution.
#//   - Neither the name of Intel Corporation nor the names of its 
#//     contributors may be used to endorse or promote products derived 
#//     from this software without specific prior written permission.
#//
#// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 
#// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT 
#// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR 
#// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT 
#// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
#// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT 
#// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
#// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY 
#// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT 
#// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE 
#// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#//*****************************************************************************


# Script name can be the called name, or something more meaningful.
SCRIPTNAME=$0
MOD_NAME=punit_fw_upgrade_drv
PATH=/usr/local/bin:/usr/bin:/bin:/sbin
PUNIT_FW_UPGRADE_SWITCH=1

. /etc/init.d/init_utilities

start_function() {

    if [ -x /usr/sbin/atom_swdl_utility ];then
        /usr/sbin/atom_swdl_utility --ready > /dev/null 2>&1
        if [ "$?" == "0" ];then
            export PUNIT_FW_UPGRADE_SWITCH=0
            echo "This is a CEFDK failsafe upgrade ready platform."
            echo "Standalone punit in field upgrade is not supported."
            exit 0
        fi
    fi

    if [ "$PUNIT_FW_UPGRADE_SWITCH" == "0" ];then
        echo "$SCRIPTNAME: punit fw in field upgrade is disabled."
        exit 0
    fi

    # Get the name of the SOC that is running
    SOC_NAME=`get_soc_info_utility NAME STRING 2>/dev/null`
 
    case $SOC_NAME in
        "SOC_NAME_CE2600" )
            #RPC notification will be sent to NP
            NP_RPC_IP=`cat /proc/ce_mailbox/npcpu_ip`
            PUNIT_DRAM_NEED_UPGRADE_FILE="/sys/module/$MOD_NAME/fw_info/punit_dram_need_upgrade"
            PUNIT_DRAM_NEED_UPGRADE=`cat $PUNIT_DRAM_NEED_UPGRADE_FILE`
            PUNIT_DRAM_UPGRADE_FILE="/sys/module/$MOD_NAME/fw_info/punit_dram_upgrade"
            RPC_CLIENT_BIN="/usr/sbin/rpc_management_client"

            if [ "$PUNIT_DRAM_NEED_UPGRADE" == "1" ];then
                #Atom-only case
                if [ "$NP_RPC_IP" == "0.0.0.0" ];then
                    echo "punit_fw_upgrade:Can't send the RPC notification to NP... (Atom-ONOLY boot?)"
                    try_command echo "update" > $PUNIT_DRAM_UPGRADE_FILE    
                    echo "0" > $PUNIT_DRAM_NEED_UPGRADE_FILE
                    #Dual-boot case
                else
                    if [ -x $RPC_CLIENT_BIN ];then
                        echo "punit_fw_upgrade: Sending the RPC notification -PUSTART to NP..."
                        try_command $RPC_CLIENT_BIN $NP_RPC_IP -PUSTART 

                        echo "punit_fw_upgrade: start the punit firmware upgrade"
                        try_command echo "update" > $PUNIT_DRAM_UPGRADE_FILE
                        echo "0" > $PUNIT_DRAM_NEED_UPGRADE_FILE

                        echo "punit_fw_upgrade: Sending the RPC notification -PUDONE  to NP..."
                        try_command $RPC_CLIENT_BIN $NP_RPC_IP -PUDONE
                    fi
                fi 
            else
                echo "Running firmware is the latest one. No need to upgrade it"
            fi
            ;;
        * )
            echo "[punit_fw_upgrade_notification]Unsupported SOC Type. Only CE2600 is supported."
    esac
}

stop_function() {
     echo "punit_fw_upgrade_notification not running"    
}

case $1 in
    "start")
        start_function
        ;;
    "stop")
        stop_function
        ;;
    "restart")
        stop_function
        start_function
        ;;
    *)
        echo "Usage: $0 {start|stop|restart}"
esac
