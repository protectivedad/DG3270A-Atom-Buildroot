#!/bin/sh

# Script name can be the called name, or something more meaningful.
SCRIPTNAME=network
PATH=/usr/local/bin:/usr/bin:/bin:/sbin

. /etc/init.d/init_utilities

start_function() {
    # If /etc/resolv.conf is not writable we'll use this.
    touch /tmp/resolv.conf

    # Set the hostname
    hostname $HOSTNAME

    ########################
    # If necessary, retrieve use DHCP for eth0
    # An address may have already been obtained if 'ip=...' was specified in
    # the kernel load command.
    debug_print "DHCP setup if necessary"
    ETH0_INFO=`ifconfig eth0`
    debug_print "eth0 info: $ETH0_INFO"
    if [ $? -eq 0 ]; then
        # eth0 is a valid device; check if an address is needed
        echo "$ETH0_INFO" | grep -q "inet addr"
        if [ $? -eq 1 ]; then
            # No 'inet addr' section found; request using DHCP
	    dhclient eth0
        fi
    fi
    ########################

    # Add an entry to the routing table
    route add -net 224.0.0.0 netmask 240.0.0.0 eth0

    # Set up the local loopback device
    ifconfig lo 127.0.0.1

    # Set the default kernel buffering for UDP multicast to 8M buffers
    # (this means that applications can be late to read a socket for up to 8M).
    # We'll want to reconsider this for later, but this currently provides us a
    # cushion for development testing.
    #echo 8388608 > /proc/sys/net/core/rmem_default
    #echo 8388608 > /proc/sys/net/core/rmem_max
}

stop_function() {
    # Remove our entry from the routing table
    route del -net 224.0.0.0 netmask 240.0.0.0 eth0
}

case $1 in
    "start")
        start_function
        ;;
    "stop")
        stop_function
        ;;
    "restart")
        stop_function
        start_function
        ;;
    *)
        echo "Usage: $0 {start|stop|restart}"
esac
